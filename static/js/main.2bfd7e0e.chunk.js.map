{"version":3,"sources":["../../chess-react/src/chessboardjsx-mod/helpers.js","../../chess-react/src/chessboardjsx-mod/Piece.js","../../chess-react/src/chessboardjsx-mod/Square.js","../../chess-react/src/chessboardjsx-mod/Notation.js","../../chess-react/src/chessboardjsx-mod/PhantomPiece.js","../../chess-react/src/chessboardjsx-mod/Row.js","../../chess-react/src/chessboardjsx-mod/Board.js","../../chess-react/src/chessboardjsx-mod/SparePieces.js","../../chess-react/src/chessboardjsx-mod/CustomDragLayer.js","../../chess-react/src/chessboardjsx-mod/svg/chesspieces/standard.js","../../chess-react/src/chessboardjsx-mod/svg/whiteKing.js","../../chess-react/src/chessboardjsx-mod/ErrorBoundary.js","../../chess-react/src/chessboardjsx-mod/index.js","../../chess-react/src/EightQueens.js","../../chess-react/src/serviceWorker.js","../../chess-react/src/index.js"],"names":["ItemTypes","COLUMNS","split","isString","s","fenToObj","fen","validFen","rows","replace","position","currentRow","i","row","colIdx","j","length","search","parseInt","fenToPieceCode","chunks","expandFenEmptySquares","piece","toLowerCase","toUpperCase","validPositionObject","pos","hasOwnProperty","square","code","renderChessPiece","_ref","dropTarget","targetSquare","waitForTransition","getSquareCoordinates","width","pieces","transitionDuration","isDragging","sourceSquare","onPieceClick","allowDrag","_ref$customDragLayerS","customDragLayerStyles","_ref$phantomPieceStyl","phantomPieceStyles","renderChessPieceArgs","squareWidth","droppedPiece","target","source","react_default","a","createElement","data-testid","concat","onClick","style","Object","objectSpread","pieceStyles","getTranslation","viewBox","height","Piece","nextProps","this","props","window","addEventListener","setTouchState","connectDragPreview","getEmptyImage","captureDraggingState","removeEventListener","_this$props","connectDragSource","Component","DragSource","canDrag","draggable","beginDrag","board","id","endDrag","monitor","setPosition","dropOffBoard","onDrop","wasManuallyDropped","wasSquareClicked","dropResults","getDropResult","didDrop","getItem","connect","dragSource","dragPreview","_ref3","isActivePiece","_ref2","transitionCoordinates","sourceSq","targetSq","x","y","getTransitionCoordinates","_ref4","opacity","transform","transition","zIndex","cursor","Square","_this","onSquareClick","setSquareCoordinates","roughSquare","squareElement","roughSquareSvg","_this$square$getBound","getBoundingClientRect","prevProps","_this$props2","screenWidth","screenHeight","_this$square$getBound2","_this2","_this$props3","connectDropTarget","squareColor","children","onMouseOverSquare","onMouseOutSquare","squareStyles","onDragOverSquare","onSquareRightClick","data-squareid","ref","defaultSquareStyle","onMouseOver","onMouseOut","onDragEnter","onContextMenu","e","preventDefault","size","center","display","DropTarget","drop","isOver","darkSquareStyle","lightSquareStyle","dropSquareStyle","justifyContent","getRow","orientation","getColumn","alpha","col","Notation","whiteColor","backgroundColor","blackColor","isRow","isColumn","isBottomLeftSquare","react","notationStyle","fontSize","color","numericStyle","alphaStyle","renderBottomLeft","columnStyle","renderLetters","_ref5","_ref6","rowStyle","renderNumbers","PureComponent","_ref7","_ref8","alignSelf","paddingLeft","paddingRight","fontFamily","PhantomPiece","phantomPieceValue","propTypes","PropTypes","number","string","object","func","Row","boardStyle","boardId","boardStyles","data-boardid","toConsumableArray","Array","map","_","r","key","toString","rowStyles","flexWrap","Board","setState","defineProperty","state","showPhantom","phantomPiece","hasPiece","currentPosition","keys","includes","chessboardjsx_mod","Consumer","context","chessboardjsx_mod_Row","chessboardjsx_mod_Square","chessboardjsx_mod_Piece","chessboardjsx_mod_PhantomPiece","showNotation","chessboardjsx_mod_Notation","SparePieces","getOrientation","top","spares","spareStyles","p","sourcePiece","manualDrop","Top","SparePieces_SparePieces","Bottom","CustomDragLayer","item","currentOffset","wasPieceTouched","layerStyles","getItemStyle","DragLayer","getSourceClientOffset","pointerEvents","left","standard","wP","xmlns","version","d","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","wR","wN","wB","wQ","wK","bP","bR","bN","bB","bQ","cx","cy","bK","whiteKing","shapeRendering","textRendering","imageRendering","clipRule","ErrorBoundary","hasError","error","console","message","container","whiteKingStyle","alignItems","flexDirection","ChessboardContext","React","createContext","getPositionObject","Chessboard","previousPositionFromProps","squareClicked","firstMove","defaultPieces","undoMove","undo","updateWindowDimensions","innerWidth","innerHeight","bool","getPosition","newPosition","isTrusted","getWidth","calcWidth","_this$state","_this$state2","positionFromProps","isEqual","Promise","resolve","setTimeout","then","_this$props4","sparePieces","_this$state3","getScreenDimensions","chessboardjsx_mod_ErrorBoundary","Provider","value","chessboardjsx_mod_Board","chessboardjsx_mod_SparePieces","chessboardjsx_mod_CustomDragLayer","_constructPositionAtt","difference","diff","squaresAffected","kind","path","lhs","rhs","constructPositionAttributes","defaultProps","boxShadow","DragDropContext","MultiBackend","HTML5toTouch","EightQueens","className","href","rel","Boolean","location","hostname","match","ReactDOM","render","src_EightQueens","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bfd7e0e.chunk.js","sourcesContent":["import diff from 'deep-diff';\r\n\r\nexport const ItemTypes = { PIECE: 'piece' };\r\nexport const COLUMNS = 'abcdefgh'.split('');\r\n\r\nexport const constructPositionAttributes = (currentPosition, position) => {\r\n  const difference = diff(currentPosition, position);\r\n  const squaresAffected = difference.length;\r\n  const sourceSquare =\r\n    difference && difference[1] && difference && difference[1].kind === 'D'\r\n      ? difference[1].path && difference[1].path[0]\r\n      : difference[0].path && difference[0].path[0];\r\n  const targetSquare =\r\n    difference && difference[1] && difference && difference[1].kind === 'D'\r\n      ? difference[0] && difference[0].path[0]\r\n      : difference[1] && difference[1].path[0];\r\n  const sourcePiece =\r\n    difference && difference[1] && difference && difference[1].kind === 'D'\r\n      ? difference[1] && difference[1].lhs\r\n      : difference[1] && difference[1].rhs;\r\n  return { sourceSquare, targetSquare, sourcePiece, squaresAffected };\r\n};\r\n\r\nfunction isString(s) {\r\n  return typeof s === 'string';\r\n}\r\n\r\nexport function fenToObj(fen) {\r\n  if (!validFen(fen)) return false;\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  let rows = fen.split('/');\r\n  let position = {};\r\n\r\n  let currentRow = 8;\r\n  for (let i = 0; i < 8; i++) {\r\n    let row = rows[i].split('');\r\n    let colIdx = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (let j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        let numEmptySquares = parseInt(row[j], 10);\r\n        colIdx = colIdx + numEmptySquares;\r\n      } else {\r\n        // piece\r\n        let square = COLUMNS[colIdx] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIdx = colIdx + 1;\r\n      }\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction expandFenEmptySquares(fen) {\r\n  return fen\r\n    .replace(/8/g, '11111111')\r\n    .replace(/7/g, '1111111')\r\n    .replace(/6/g, '111111')\r\n    .replace(/5/g, '11111')\r\n    .replace(/4/g, '1111')\r\n    .replace(/3/g, '111')\r\n    .replace(/2/g, '11');\r\n}\r\n\r\nexport function validFen(fen) {\r\n  if (!isString(fen)) return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // expand the empty square numbers to just 1s\r\n  fen = expandFenEmptySquares(fen);\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  let chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check each section\r\n  for (let i = 0; i < 8; i++) {\r\n    if (chunks[i].length !== 8 || chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\nfunction validSquare(square) {\r\n  return isString(square) && square.search(/^[a-h][1-8]$/) !== -1;\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1;\r\n}\r\n\r\nexport function validPositionObject(pos) {\r\n  if (pos === null || typeof pos !== 'object') return false;\r\n\r\n  for (let i in pos) {\r\n    if (!pos.hasOwnProperty(i)) continue;\r\n\r\n    if (!validSquare(i) || !validPieceCode(pos[i])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction squeezeFenEmptySquares(fen) {\r\n  return fen\r\n    .replace(/11111111/g, '8')\r\n    .replace(/1111111/g, '7')\r\n    .replace(/111111/g, '6')\r\n    .replace(/11111/g, '5')\r\n    .replace(/1111/g, '4')\r\n    .replace(/111/g, '3')\r\n    .replace(/11/g, '2');\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  let pieceCodeLetters = piece.split('');\r\n\r\n  // white piece\r\n  if (pieceCodeLetters[0] === 'w') {\r\n    return pieceCodeLetters[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return pieceCodeLetters[1].toLowerCase();\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nexport function objToFen(obj) {\r\n  if (!validPositionObject(obj)) return false;\r\n\r\n  let fen = '';\r\n\r\n  let currentRow = 8;\r\n  for (let i = 0; i < 8; i++) {\r\n    for (let j = 0; j < 8; j++) {\r\n      let square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square)) {\r\n        fen = fen + pieceCodeToFen(obj[square]);\r\n      } else {\r\n        // empty space\r\n        fen = fen + '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen = fen + '/';\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  // squeeze the empty numbers together\r\n  fen = squeezeFenEmptySquares(fen);\r\n\r\n  return fen;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport PropTypes from 'prop-types';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from './helpers';\r\n\r\n/* eslint react/prop-types: 0 */\r\nexport const renderChessPiece = ({\r\n  dropTarget,\r\n  square,\r\n  targetSquare,\r\n  waitForTransition,\r\n  getSquareCoordinates,\r\n  piece,\r\n  width,\r\n  pieces,\r\n  transitionDuration,\r\n  isDragging,\r\n  sourceSquare,\r\n  onPieceClick,\r\n  allowDrag,\r\n  customDragLayerStyles = {},\r\n  phantomPieceStyles = {}\r\n}) => {\r\n  const renderChessPieceArgs = {\r\n    squareWidth: width / 8,\r\n    isDragging,\r\n    droppedPiece: dropTarget && dropTarget.piece,\r\n    targetSquare: dropTarget && dropTarget.target,\r\n    sourceSquare: dropTarget && dropTarget.source\r\n  };\r\n\r\n  return (\r\n    <div\r\n      data-testid={`${piece}-${square}`}\r\n      onClick={() => onPieceClick(piece)}\r\n      style={{\r\n        ...pieceStyles({\r\n          isDragging,\r\n          transitionDuration,\r\n          waitForTransition,\r\n          square,\r\n          targetSquare,\r\n          sourceSquare,\r\n          getSquareCoordinates,\r\n          getTranslation,\r\n          piece,\r\n          allowDrag\r\n        }),\r\n        ...phantomPieceStyles,\r\n        ...customDragLayerStyles\r\n      }}\r\n    >\r\n      {typeof pieces[piece] === 'function' ? (\r\n        pieces[piece](renderChessPieceArgs)\r\n      ) : (\r\n        <svg viewBox={`1 1 43 43`} width={width / 8} height={width / 8}>\r\n          <g>{pieces[piece]}</g>\r\n        </svg>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Piece extends Component {\r\n  static propTypes = {\r\n    piece: PropTypes.string,\r\n    square: PropTypes.string,\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    width: PropTypes.number,\r\n    connectDragSource: PropTypes.func,\r\n    isDragging: PropTypes.bool,\r\n    connectDragPreview: PropTypes.func,\r\n    dropOffBoard: PropTypes.string,\r\n    getSquareCoordinates: PropTypes.func,\r\n    onDrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n    transitionDuration: PropTypes.number,\r\n    pieces: PropTypes.object,\r\n    sourceSquare: PropTypes.string,\r\n    targetSquare: PropTypes.string,\r\n    waitForTransition: PropTypes.bool,\r\n    setTouchState: PropTypes.func,\r\n    onPieceClick: PropTypes.func,\r\n    wasSquareClicked: PropTypes.func,\r\n    allowDrag: PropTypes.func\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const shouldPieceUpdate =\r\n      nextProps.dropTarget !== null ||\r\n      nextProps.isDragging ||\r\n      this.props.isDragging ||\r\n      // if the position comes from the position prop, check if it is a different position\r\n      this.props.sourceSquare !== nextProps.sourceSquare ||\r\n      this.props.waitForTransition !== nextProps.waitForTransition ||\r\n      // if the screen size changes then update\r\n      this.props.width !== nextProps.width;\r\n\r\n    if (shouldPieceUpdate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('touchstart', this.props.setTouchState);\r\n\r\n    this.props.connectDragPreview(getEmptyImage(), {\r\n      captureDraggingState: true\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('touchstart', this.props.setTouchState);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      square,\r\n      targetSquare,\r\n      waitForTransition,\r\n      getSquareCoordinates,\r\n      piece,\r\n      width,\r\n      pieces,\r\n      transitionDuration,\r\n      isDragging,\r\n      connectDragSource,\r\n      sourceSquare,\r\n      dropTarget,\r\n      onPieceClick,\r\n      allowDrag\r\n    } = this.props;\r\n\r\n    return connectDragSource(\r\n      renderChessPiece({\r\n        square,\r\n        targetSquare,\r\n        waitForTransition,\r\n        getSquareCoordinates,\r\n        piece,\r\n        width,\r\n        pieces,\r\n        transitionDuration,\r\n        isDragging,\r\n        sourceSquare,\r\n        dropTarget,\r\n        onPieceClick,\r\n        allowDrag\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nconst pieceSource = {\r\n  canDrag(props) {\r\n    return (\r\n      props.draggable &&\r\n      props.allowDrag({ piece: props.piece, sourceSquare: props.square })\r\n    );\r\n  },\r\n  beginDrag(props) {\r\n    return {\r\n      piece: props.piece,\r\n      source: props.square,\r\n      board: props.id\r\n    };\r\n  },\r\n  endDrag(props, monitor) {\r\n    const {\r\n      setPosition,\r\n      dropOffBoard,\r\n      piece,\r\n      square,\r\n      onDrop,\r\n      wasManuallyDropped,\r\n      wasSquareClicked\r\n    } = props;\r\n    const dropResults = monitor.getDropResult();\r\n    const didDrop = monitor.didDrop();\r\n\r\n    // trash piece when dropped off board\r\n    if (!didDrop && dropOffBoard === 'trash') {\r\n      return setPosition({ sourceSquare: square, piece });\r\n    }\r\n\r\n    const board = monitor.getItem().board;\r\n    const dropBoard = dropResults && dropResults.board;\r\n\r\n    // check if target board is source board\r\n    if (board === dropBoard && didDrop) {\r\n      if (onDrop.length) {\r\n        wasSquareClicked(false);\r\n        wasManuallyDropped(true);\r\n        // execute user's logic\r\n        return onDrop({\r\n          sourceSquare: square,\r\n          targetSquare: dropResults.target,\r\n          piece\r\n        });\r\n      }\r\n      // set new position\r\n      setPosition({\r\n        sourceSquare: square,\r\n        targetSquare: dropResults.target,\r\n        piece\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n    dropTarget: monitor.getDropResult()\r\n  };\r\n}\r\n\r\nexport default DragSource(ItemTypes.PIECE, pieceSource, collect)(Piece);\r\n\r\nconst isActivePiece = (square, targetSquare) =>\r\n  targetSquare && targetSquare === square;\r\n\r\nconst getTransitionCoordinates = ({\r\n  getSquareCoordinates,\r\n  sourceSq,\r\n  targetSq\r\n}) => {\r\n  const transitionCoordinates = getSquareCoordinates(sourceSq, targetSq);\r\n  const { sourceSquare, targetSquare } = transitionCoordinates;\r\n\r\n  return `translate(${sourceSquare.x - targetSquare.x}px, ${sourceSquare.y -\r\n    targetSquare.y}px)`;\r\n};\r\n\r\nconst getTranslation = ({\r\n  waitForTransition,\r\n  square,\r\n  targetSquare,\r\n  sourceSquare,\r\n  getSquareCoordinates\r\n}) => {\r\n  return (\r\n    isActivePiece(square, targetSquare) &&\r\n    waitForTransition &&\r\n    getTransitionCoordinates({\r\n      getSquareCoordinates,\r\n      sourceSq: sourceSquare,\r\n      targetSq: targetSquare\r\n    })\r\n  );\r\n};\r\n\r\nconst pieceStyles = ({\r\n  isDragging,\r\n  transitionDuration,\r\n  waitForTransition,\r\n  square,\r\n  targetSquare,\r\n  sourceSquare,\r\n  getSquareCoordinates,\r\n  getTranslation,\r\n  piece,\r\n  allowDrag\r\n}) => ({\r\n  opacity: isDragging ? 0 : 1,\r\n  transform: getTranslation({\r\n    waitForTransition,\r\n    square,\r\n    targetSquare,\r\n    sourceSquare,\r\n    getSquareCoordinates\r\n  }),\r\n  transition: `transform ${transitionDuration}ms`,\r\n  zIndex: 5,\r\n  cursor: isDragging\r\n    ? '-webkit-grabbing'\r\n    : allowDrag({ piece, sourceSquare: square })\r\n      ? '-webkit-grab'\r\n      : 'not-allowed'\r\n});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nimport { ItemTypes } from './helpers';\r\n\r\nclass Square extends Component {\r\n  static propTypes = {\r\n    connectDropTarget: PropTypes.func,\r\n    width: PropTypes.number,\r\n    squareColor: PropTypes.oneOf(['white', 'black']),\r\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]),\r\n    isOver: PropTypes.bool,\r\n    square: PropTypes.string,\r\n    setSquareCoordinates: PropTypes.func,\r\n    lightSquareStyle: PropTypes.object,\r\n    darkSquareStyle: PropTypes.object,\r\n    roughSquare: PropTypes.func,\r\n    onMouseOverSquare: PropTypes.func,\r\n    onMouseOutSquare: PropTypes.func,\r\n    dropSquareStyle: PropTypes.object,\r\n    screenWidth: PropTypes.number,\r\n    screenHeight: PropTypes.number,\r\n    squareStyles: PropTypes.object,\r\n    onDragOverSquare: PropTypes.func,\r\n    onSquareClick: PropTypes.func,\r\n    wasSquareClicked: PropTypes.func,\r\n    onSquareRightClick: PropTypes.func\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { square, setSquareCoordinates, width, roughSquare } = this.props;\r\n    roughSquare({ squareElement: this.roughSquareSvg, squareWidth: width / 8 });\r\n\r\n    const { x, y } = this[square].getBoundingClientRect();\r\n    setSquareCoordinates(x, y, square);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      screenWidth,\r\n      screenHeight,\r\n      square,\r\n      setSquareCoordinates\r\n    } = this.props;\r\n\r\n    const didScreenSizeChange =\r\n      prevProps.screenWidth !== screenWidth ||\r\n      prevProps.screenHeight !== screenHeight;\r\n\r\n    if (didScreenSizeChange) {\r\n      const { x, y } = this[square].getBoundingClientRect();\r\n      setSquareCoordinates(x, y, square);\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.wasSquareClicked(true);\r\n    this.props.onSquareClick(this.props.square);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      connectDropTarget,\r\n      width,\r\n      squareColor,\r\n      children,\r\n      square,\r\n      roughSquare,\r\n      onMouseOverSquare,\r\n      onMouseOutSquare,\r\n      squareStyles,\r\n      onDragOverSquare,\r\n      onSquareRightClick\r\n    } = this.props;\r\n\r\n    return connectDropTarget(\r\n      <div\r\n        data-testid={`${squareColor}-square`}\r\n        data-squareid={square}\r\n        ref={ref => (this[square] = ref)}\r\n        style={defaultSquareStyle(this.props)}\r\n        onMouseOver={() => onMouseOverSquare(square)}\r\n        onMouseOut={() => onMouseOutSquare(square)}\r\n        onDragEnter={() => onDragOverSquare(square)}\r\n        onClick={() => this.onClick()}\r\n        onContextMenu={e => {\r\n          e.preventDefault();\r\n          onSquareRightClick(square);\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            ...size(width),\r\n            ...center,\r\n            ...(squareStyles[square] && squareStyles[square])\r\n          }}\r\n        >\r\n          {roughSquare.length ? (\r\n            <div style={center}>\r\n              {children}\r\n              <svg\r\n                style={{\r\n                  ...size(width),\r\n                  position: 'absolute',\r\n                  display: 'block'\r\n                }}\r\n                ref={ref => (this.roughSquareSvg = ref)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            children\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst squareTarget = {\r\n  drop(props, monitor) {\r\n    return {\r\n      target: props.square,\r\n      board: props.id,\r\n      piece: monitor.getItem().piece,\r\n      source: monitor.getItem().source\r\n    };\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n  };\r\n}\r\n\r\nexport default DropTarget(ItemTypes.PIECE, squareTarget, collect)(Square);\r\n\r\nconst defaultSquareStyle = props => {\r\n  const {\r\n    width,\r\n    squareColor,\r\n    isOver,\r\n    darkSquareStyle,\r\n    lightSquareStyle,\r\n    dropSquareStyle\r\n  } = props;\r\n\r\n  return {\r\n    ...{\r\n      ...size(width),\r\n      ...center,\r\n      ...(squareColor === 'black' ? darkSquareStyle : lightSquareStyle),\r\n      ...(isOver && dropSquareStyle)\r\n    }\r\n  };\r\n};\r\n\r\nconst center = {\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n};\r\n\r\nconst size = width => ({\r\n  width: width / 8,\r\n  height: width / 8\r\n});\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getRow = (orientation, row) =>\r\n  orientation === 'white' ? row + 1 : row - 1;\r\n\r\nconst getColumn = (orientation, alpha, col) =>\r\n  orientation === 'black' ? alpha[7 - col] : alpha[col];\r\n\r\nclass Notation extends PureComponent {\r\n  static propTypes = {\r\n    row: PropTypes.number,\r\n    col: PropTypes.number,\r\n    alpha: PropTypes.array,\r\n    orientation: PropTypes.string,\r\n    width: PropTypes.number,\r\n    lightSquareStyle: PropTypes.object,\r\n    darkSquareStyle: PropTypes.object\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      row,\r\n      col,\r\n      orientation,\r\n      lightSquareStyle,\r\n      darkSquareStyle\r\n    } = this.props;\r\n\r\n    const whiteColor = lightSquareStyle.backgroundColor;\r\n    const blackColor = darkSquareStyle.backgroundColor;\r\n\r\n    const isRow = col === 0;\r\n    const isColumn =\r\n      (orientation === 'white' && row === 0) ||\r\n      (orientation === 'black' && row === 9);\r\n    const isBottomLeftSquare = isRow && isColumn;\r\n\r\n    if (isBottomLeftSquare) {\r\n      return renderBottomLeft(this.props, { whiteColor });\r\n    }\r\n\r\n    if (isColumn) {\r\n      return renderLetters(this.props, {\r\n        whiteColor,\r\n        blackColor\r\n      });\r\n    }\r\n\r\n    if (isRow) {\r\n      return renderNumbers(this.props, {\r\n        whiteColor,\r\n        blackColor,\r\n        isRow,\r\n        isBottomLeftSquare\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Notation;\r\n\r\n/* eslint react/prop-types: 0 */\r\nfunction renderBottomLeft(\r\n  { orientation, row, width, alpha, col },\r\n  { whiteColor }\r\n) {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        data-testid={`bottom-left-${getRow(orientation, row)}`}\r\n        style={{\r\n          ...notationStyle,\r\n          ...{ fontSize: width / 48, color: whiteColor },\r\n          ...numericStyle(width)\r\n        }}\r\n      >\r\n        {getRow(orientation, row)}\r\n      </div>\r\n      <div\r\n        data-testid={`bottom-left-${getColumn(orientation, alpha, col)}`}\r\n        style={{\r\n          ...notationStyle,\r\n          ...{ fontSize: width / 48, color: whiteColor },\r\n          ...alphaStyle(width)\r\n        }}\r\n      >\r\n        {getColumn(orientation, alpha, col)}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction renderLetters(\r\n  { orientation, width, alpha, col },\r\n  { whiteColor, blackColor }\r\n) {\r\n  return (\r\n    <div\r\n      data-testid={`column-${getColumn(orientation, alpha, col)}`}\r\n      style={{\r\n        ...notationStyle,\r\n        ...columnStyle({ col, width, blackColor, whiteColor }),\r\n        ...alphaStyle(width)\r\n      }}\r\n    >\r\n      {getColumn(orientation, alpha, col)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction renderNumbers(\r\n  { orientation, row, width },\r\n  { whiteColor, blackColor, isRow, isBottomLeftSquare }\r\n) {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...notationStyle,\r\n        ...rowStyle({\r\n          row,\r\n          width,\r\n          blackColor,\r\n          whiteColor,\r\n          orientation,\r\n          isBottomLeftSquare,\r\n          isRow\r\n        }),\r\n        ...numericStyle(width)\r\n      }}\r\n    >\r\n      {getRow(orientation, row)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst columnStyle = ({ col, width, blackColor, whiteColor }) => ({\r\n  fontSize: width / 48,\r\n  color: col % 2 !== 0 ? blackColor : whiteColor\r\n});\r\n\r\nconst rowStyle = ({\r\n  row,\r\n  width,\r\n  blackColor,\r\n  whiteColor,\r\n  orientation,\r\n  isBottomLeftSquare,\r\n  isRow\r\n}) => {\r\n  return {\r\n    fontSize: width / 48,\r\n    color:\r\n      orientation === 'black'\r\n        ? isRow && !isBottomLeftSquare && row % 2 === 0\r\n          ? blackColor\r\n          : whiteColor\r\n        : isRow && !isBottomLeftSquare && row % 2 !== 0\r\n          ? blackColor\r\n          : whiteColor\r\n  };\r\n};\r\n\r\nconst alphaStyle = width => ({\r\n  alignSelf: 'flex-end',\r\n  paddingLeft: width / 8 - width / 48\r\n});\r\n\r\nconst numericStyle = width => ({\r\n  alignSelf: 'flex-start',\r\n  paddingRight: width / 8 - width / 48\r\n});\r\n\r\nconst notationStyle = {\r\n  fontFamily: 'Helvetica Neue',\r\n  zIndex: 3,\r\n  position: 'absolute'\r\n};\r\n","import React from 'react'; // eslint-disable-line no-unused-vars\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { renderChessPiece } from './Piece';\r\n\r\nPhantomPiece.propTypes = {\r\n  width: PropTypes.number,\r\n  phantomPieceValue: PropTypes.string,\r\n  pieces: PropTypes.object,\r\n  allowDrag: PropTypes.func\r\n};\r\n\r\nfunction PhantomPiece({ width, pieces, phantomPieceValue, allowDrag }) {\r\n  return renderChessPiece({\r\n    width,\r\n    pieces,\r\n    piece: phantomPieceValue,\r\n    phantomPieceStyles: phantomPieceStyles(width),\r\n    allowDrag\r\n  });\r\n}\r\n\r\nexport default PhantomPiece;\r\n\r\nconst phantomPieceStyles = width => ({\r\n  position: 'absolute',\r\n  width: width / 8,\r\n  height: width / 8,\r\n  zIndex: 1\r\n});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { COLUMNS } from './helpers';\r\n\r\nclass Row extends Component {\r\n  static propTypes = {\r\n    width: PropTypes.number,\r\n    orientation: PropTypes.string,\r\n    boardStyle: PropTypes.object,\r\n    children: PropTypes.func,\r\n    boardId: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n  };\r\n\r\n  render() {\r\n    const { width, boardStyle, orientation, children, boardId } = this.props;\r\n    let alpha = COLUMNS;\r\n    let row = 8;\r\n    let squareColor = 'white';\r\n\r\n    if (orientation === 'black') row = 1;\r\n\r\n    return (\r\n      <div\r\n        style={{ ...boardStyles(width), ...boardStyle }}\r\n        data-boardid={boardId}\r\n      >\r\n        {[...Array(8)].map((_, r) => {\r\n          row = orientation === 'black' ? row + 1 : row - 1;\r\n\r\n          return (\r\n            <div key={r.toString()} style={rowStyles(width)}>\r\n              {[...Array(8)].map((_, col) => {\r\n                let square =\r\n                  orientation === 'black'\r\n                    ? alpha[7 - col] + (row - 1)\r\n                    : alpha[col] + (row + 1);\r\n\r\n                if (col !== 0) {\r\n                  squareColor = squareColor === 'black' ? 'white' : 'black';\r\n                }\r\n                return children({ square, squareColor, col, row, alpha });\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n\r\nconst boardStyles = width => ({\r\n  width,\r\n  height: width,\r\n  cursor: 'default'\r\n});\r\n\r\nconst rowStyles = width => ({\r\n  display: 'flex',\r\n  flexWrap: 'nowrap',\r\n  width\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport Piece from './Piece';\r\nimport Square from './Square';\r\nimport Notation from './Notation';\r\nimport Chessboard from './index';\r\nimport PhantomPiece from './PhantomPiece';\r\nimport Row from './Row';\r\n\r\nclass Board extends Component {\r\n  setSquareCoordinates = (x, y, square) =>\r\n    this.setState({ [square]: { x, y } });\r\n\r\n  getSquareCoordinates = (sourceSquare, targetSquare) => ({\r\n    sourceSquare: this.state[sourceSquare],\r\n    targetSquare: this.state[targetSquare]\r\n  });\r\n\r\n  showPhantom = ({ square, targetSquare, phantomPiece }) => {\r\n    const isActivePiece = (square, targetSquare) =>\r\n      targetSquare && targetSquare === square;\r\n\r\n    return (\r\n      phantomPiece &&\r\n      phantomPiece[targetSquare] &&\r\n      isActivePiece(square, targetSquare)\r\n    );\r\n  };\r\n\r\n  hasPiece = (currentPosition, square) =>\r\n    currentPosition &&\r\n    Object.keys(currentPosition) &&\r\n    Object.keys(currentPosition).includes(square);\r\n\r\n  render() {\r\n    return (\r\n      <Chessboard.Consumer>\r\n        {context => {\r\n          return (\r\n            <Row\r\n              width={context.width}\r\n              boardStyle={context.boardStyle}\r\n              orientation={context.orientation}\r\n              boardId={context.id}\r\n            >\r\n              {({ square, squareColor, col, row, alpha }) => {\r\n                return (\r\n                  <Square\r\n                    key={`${col}${row}`}\r\n                    width={context.width}\r\n                    square={square}\r\n                    squareColor={squareColor}\r\n                    setSquareCoordinates={this.setSquareCoordinates}\r\n                    lightSquareStyle={context.lightSquareStyle}\r\n                    darkSquareStyle={context.darkSquareStyle}\r\n                    roughSquare={context.roughSquare}\r\n                    onMouseOverSquare={context.onMouseOverSquare}\r\n                    onMouseOutSquare={context.onMouseOutSquare}\r\n                    onDragOverSquare={context.onDragOverSquare}\r\n                    dropSquareStyle={context.dropSquareStyle}\r\n                    id={context.id}\r\n                    screenWidth={context.screenWidth}\r\n                    screenHeight={context.screenHeight}\r\n                    squareStyles={context.squareStyles}\r\n                    onSquareClick={context.onSquareClick}\r\n                    onSquareRightClick={context.onSquareRightClick}\r\n                    wasSquareClicked={context.wasSquareClicked}\r\n                  >\r\n                    {this.hasPiece(context.currentPosition, square) ? (\r\n                      <Piece\r\n                        pieces={context.pieces}\r\n                        square={square}\r\n                        piece={context.currentPosition[square]}\r\n                        width={context.width}\r\n                        setPosition={context.setPosition}\r\n                        dropOffBoard={context.dropOffBoard}\r\n                        getSquareCoordinates={this.getSquareCoordinates}\r\n                        draggable={context.draggable}\r\n                        onDrop={context.onDrop}\r\n                        sourceSquare={context.sourceSquare}\r\n                        targetSquare={context.targetSquare}\r\n                        waitForTransition={context.waitForTransition}\r\n                        transitionDuration={context.transitionDuration}\r\n                        orientation={context.orientation}\r\n                        id={context.id}\r\n                        setTouchState={context.setTouchState}\r\n                        wasManuallyDropped={context.wasManuallyDropped}\r\n                        phantomPiece={context.phantomPiece}\r\n                        onPieceClick={context.onPieceClick}\r\n                        wasSquareClicked={context.wasSquareClicked}\r\n                        allowDrag={context.allowDrag}\r\n                      />\r\n                    ) : null}\r\n\r\n                    {this.showPhantom({\r\n                      square,\r\n                      targetSquare: context.targetSquare,\r\n                      phantomPiece: context.phantomPiece\r\n                    }) && (\r\n                      <PhantomPiece\r\n                        width={context.width}\r\n                        phantomPieceValue={\r\n                          context.phantomPiece[context.targetSquare]\r\n                        }\r\n                        pieces={context.pieces}\r\n                        showNotation={context.showNotation}\r\n                        allowDrag={context.allowDrag}\r\n                      />\r\n                    )}\r\n\r\n                    {context.showNotation && (\r\n                      <Notation\r\n                        row={row}\r\n                        col={col}\r\n                        alpha={alpha}\r\n                        orientation={context.orientation}\r\n                        width={context.width}\r\n                        lightSquareStyle={context.lightSquareStyle}\r\n                        darkSquareStyle={context.darkSquareStyle}\r\n                      />\r\n                    )}\r\n                  </Square>\r\n                );\r\n              }}\r\n            </Row>\r\n          );\r\n        }}\r\n      </Chessboard.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Piece from './Piece';\r\nimport Chessboard from './index';\r\n\r\nfunction SparePiecesTop() {\r\n  return <SparePieces top />;\r\n}\r\n\r\nfunction SparePiecesBottom() {\r\n  return <SparePieces />;\r\n}\r\n\r\nclass SparePieces extends Component {\r\n  static propTypes = { top: PropTypes.bool };\r\n\r\n  static Top = SparePiecesTop;\r\n  static Bottom = SparePiecesBottom;\r\n\r\n  getOrientation = orientation => {\r\n    const { top } = this.props;\r\n    if (top) {\r\n      return orientation === 'black' ? 'white' : 'black';\r\n    }\r\n    return orientation === 'black' ? 'black' : 'white';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Chessboard.Consumer>\r\n        {context => {\r\n          const spares =\r\n            this.getOrientation(context.orientation) === 'black'\r\n              ? ['bQ']\r\n              : ['wQ'];\r\n\r\n          return (\r\n            <div style={spareStyles(context.width)}>\r\n              {spares.map(p => (\r\n                <div data-testid={`spare-${p}`} key={p}>\r\n                  <Piece\r\n                    piece={p}\r\n                    width={context.width}\r\n                    setPosition={context.setPosition}\r\n                    square={'spare'}\r\n                    dropOffBoard={context.dropOffBoard}\r\n                    draggable={true}\r\n                    onDrop={context.onDrop}\r\n                    sourceSquare={context.sourceSquare}\r\n                    targetSquare={context.targetSquare}\r\n                    sourcePiece={context.sourcePiece}\r\n                    orientation={context.orientation}\r\n                    manualDrop={context.manualDrop}\r\n                    id={context.id}\r\n                    pieces={context.pieces}\r\n                    wasManuallyDropped={context.wasManuallyDropped}\r\n                    onPieceClick={context.onPieceClick}\r\n                    allowDrag={context.allowDrag}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Chessboard.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SparePieces;\r\n\r\nconst spareStyles = width => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  width\r\n});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DragLayer } from 'react-dnd';\r\n\r\nimport { renderChessPiece } from './Piece';\r\n\r\nclass CustomDragLayer extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.object,\r\n    currentOffset: PropTypes.shape({\r\n      x: PropTypes.number.isRequired,\r\n      y: PropTypes.number.isRequired\r\n    }),\r\n    isDragging: PropTypes.bool.isRequired,\r\n    width: PropTypes.number,\r\n    pieces: PropTypes.object,\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    wasPieceTouched: PropTypes.bool,\r\n    sourceSquare: PropTypes.string\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isDragging,\r\n      width,\r\n      item,\r\n      id,\r\n      currentOffset,\r\n      wasPieceTouched,\r\n      pieces,\r\n      sourceSquare\r\n    } = this.props;\r\n\r\n    return isDragging && item.board === id ? (\r\n      <div style={layerStyles}>\r\n        <div style={getItemStyle(currentOffset, wasPieceTouched)}>\r\n          {renderChessPiece({\r\n            width,\r\n            pieces,\r\n            piece: item.piece,\r\n            isDragging,\r\n            customDragLayerStyles: { opacity: 1 },\r\n            sourceSquare\r\n          })}\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nfunction collect(monitor) {\r\n  return {\r\n    item: monitor.getItem(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nexport default DragLayer(collect)(CustomDragLayer);\r\n\r\nconst layerStyles = {\r\n  position: 'fixed',\r\n  pointerEvents: 'none',\r\n  zIndex: 10,\r\n  left: 0,\r\n  top: 0\r\n};\r\n\r\nconst getItemStyle = (currentOffset, wasPieceTouched) => {\r\n  if (!currentOffset) return { display: 'none' };\r\n\r\n  let { x, y } = currentOffset;\r\n  const transform = wasPieceTouched\r\n    ? `translate(${x}px, ${y + -25}px) scale(2)`\r\n    : `translate(${x}px, ${y}px)`;\r\n\r\n  return { transform };\r\n};\r\n","import React from 'react';\r\n//Chess pieces originally by User:Cburnett in a sprite image for use in computer applications.\r\n\r\nexport default {\r\n  wP: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <path\r\n        d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n        style={{\r\n          opacity: '1',\r\n          fill: '#ffffff',\r\n          fillOpacity: '1',\r\n          fillRule: 'nonzero',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'miter',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      />\r\n    </svg>\r\n  ),\r\n  wR: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: '#ffffff',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14\"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path d=\"M 34,14 L 31,17 L 14,17 L 11,14\" />\r\n        <path\r\n          d=\"M 31,17 L 31,29.5 L 14,29.5 L 14,17\"\r\n          style={{\r\n            strokeLinecap: 'butt',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path d=\"M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5\" />\r\n        <path\r\n          d=\"M 11,14 L 34,14\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  wN: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: 'none',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n          transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  wB: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: 'none',\r\n          fillRule: 'evenodd',\r\n          fillOpacity: '1',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <g\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#000000',\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        >\r\n          <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n          <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n          <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n        </g>\r\n        <path\r\n          d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  wQ: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: '#ffffff',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n          transform=\"translate(-1,-1)\"\r\n        />\r\n        <path\r\n          d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n          transform=\"translate(15.5,-5.5)\"\r\n        />\r\n        <path\r\n          d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n          transform=\"translate(32,-1)\"\r\n        />\r\n        <path\r\n          d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n          transform=\"translate(7,-4.5)\"\r\n        />\r\n        <path\r\n          d=\"M 9 13 A 2 2 0 1 1  5,13 A 2 2 0 1 1  9 13 z\"\r\n          transform=\"translate(24,-4)\"\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path d=\"M 11.5,30 C 15,29 30,29 33.5,30\" style={{ fill: 'none' }} />\r\n        <path\r\n          d=\"M 12,33.5 C 18,32.5 27,32.5 33,33.5\"\r\n          style={{ fill: 'none' }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  wK: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          fill: 'none',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 22.5,11.63 L 22.5,6\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 20,8 L 25,8\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#000000',\r\n            strokeLinecap: 'butt',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,30 C 17,27 27,27 32.5,30\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,34 27,34 32.5,37\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  bP: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <path\r\n        d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n        style={{\r\n          opacity: '1',\r\n          fill: '#000000',\r\n          fillOpacity: '1',\r\n          fillRule: 'nonzero',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'miter',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      />\r\n    </svg>\r\n  ),\r\n  bR: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: '000000',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\r\n          style={{\r\n            strokeLinecap: 'butt',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 12,35.5 L 33,35.5 L 33,35.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeWidth: '1',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 13,31.5 L 32,31.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeWidth: '1',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 14,29.5 L 31,29.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeWidth: '1',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 14,16.5 L 31,16.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeWidth: '1',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11,14 L 34,14\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeWidth: '1',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  bN: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: 'none',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n          transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\r\n          style={{\r\n            fill: '#ffffff',\r\n            stroke: 'none'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  bB: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: 'none',\r\n          fillRule: 'evenodd',\r\n          fillOpacity: '1',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <g\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000',\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        >\r\n          <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n          <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n          <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n        </g>\r\n        <path\r\n          d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  bQ: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          opacity: '1',\r\n          fill: '000000',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <g\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: 'none'\r\n          }}\r\n        >\r\n          <circle cx=\"6\" cy=\"12\" r=\"2.75\" />\r\n          <circle cx=\"14\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"22.5\" cy=\"8\" r=\"2.75\" />\r\n          <circle cx=\"31\" cy=\"9\" r=\"2.75\" />\r\n          <circle cx=\"39\" cy=\"12\" r=\"2.75\" />\r\n        </g>\r\n        <path\r\n          d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\r\n          style={{\r\n            strokeLinecap: 'butt',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\r\n          style={{\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinecap: 'butt'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11,29 A 35,35 1 0 1 34,29\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 12.5,31.5 L 32.5,31.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  ),\r\n  bK: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"45\"\r\n      height=\"45\"\r\n    >\r\n      <g\r\n        style={{\r\n          fill: 'none',\r\n          fillOpacity: '1',\r\n          fillRule: 'evenodd',\r\n          stroke: '#000000',\r\n          strokeWidth: '1.5',\r\n          strokeLinecap: 'round',\r\n          strokeLinejoin: 'round',\r\n          strokeMiterlimit: '4',\r\n          strokeDasharray: 'none',\r\n          strokeOpacity: '1'\r\n        }}\r\n      >\r\n        <path\r\n          d=\"M 22.5,11.63 L 22.5,6\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n          id=\"path6570\"\r\n        />\r\n        <path\r\n          d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n          style={{\r\n            fill: '#000000',\r\n            fillOpacity: '1',\r\n            strokeLinecap: 'butt',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n          style={{\r\n            fill: '#000000',\r\n            stroke: '#000000'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 20,8 L 25,8\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#000000',\r\n            strokeLinejoin: 'miter'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n        <path\r\n          d=\"M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37\"\r\n          style={{\r\n            fill: 'none',\r\n            stroke: '#ffffff'\r\n          }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nexport default {\r\n  whiteKing: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      style={{\r\n        shapeRendering: 'geometricPrecision',\r\n        textRendering: 'geometricPrecision',\r\n        imageRendering: 'optimizeQuality'\r\n      }}\r\n      viewBox=\"0 0 4210 12970\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      width=\"250\"\r\n      height=\"250\"\r\n    >\r\n      <g>\r\n        <path\r\n          style={{\r\n            fill: 'black',\r\n            fillRule: 'nonzero'\r\n          }}\r\n          d=\"M2105 0c169,0 286,160 249,315l200 0c-172,266 -231,479 -256,792 315,-24 530,-86 792,-255l0 897c-265,-171 -479,-231 -792,-256 18,234 75,495 185,682l339 0c233,0 369,269 225,456l545 0 -595 1916c130,94 158,275 59,402 465,0 416,568 51,568l-334 0 465 2867 332 0c250,0 381,306 199,485 162,63 273,220 273,399l0 633 168 0 0 475c-1403,0 -2807,0 -4210,0l0 -475 167 0 0 -633c0,-179 112,-336 274,-399 -181,-178 -52,-485 199,-485l332 0 465 -2867 -335 0c-353,0 -418,-568 51,-568 -98,-127 -70,-308 59,-402l-594 -1916c181,0 363,0 545,0 -144,-187 -9,-456 225,-456l339 0c110,-187 167,-448 185,-682 -315,25 -530,87 -793,256l0 -897c266,171 480,231 793,255 -25,-315 -87,-529 -256,-792l199 0c-36,-155 81,-315 250,-315zm-1994 10012l0 253 3988 0 0 -253c-1330,0 -2659,0 -3988,0zm484 -1060c-174,0 -316,142 -316,316l0 633 3652 0 0 -633c0,-174 -142,-316 -316,-316 -1007,0 -2013,0 -3020,0zm45 -457c-230,0 -225,345 0,345l2930 0c230,0 225,-345 0,-345 -977,0 -1953,0 -2930,0zm2020 -2978l-1111 0 -465 2867 2041 0 -465 -2867zm-1558 -456c-229,0 -224,345 0,345 669,0 1337,0 2005,0 230,0 225,-345 0,-345 -668,0 -1336,0 -2005,0zm1730 -457l-1454 0c-229,0 -224,345 0,345l1454 0c229,0 224,-345 0,-345zm-2064 -1862l544 1751c529,0 1057,0 1586,0l544 -1751c-892,0 -1783,0 -2674,0zm1085 -567l504 0c-126,-247 -163,-526 -177,-800 273,15 553,52 800,177l0 -504c-247,126 -527,163 -800,177 14,-273 51,-552 177,-799 -168,0 -336,0 -504,0 125,247 162,526 177,799 -274,-14 -553,-51 -800,-177l0 504c247,-125 527,-162 800,-177 -15,274 -52,553 -177,800zm969 111l-1434 0c-230,0 -225,345 0,345l1434 0c230,0 225,-345 0,-345zm-717 -2175c-105,0 -175,109 -133,204l266 0c42,-96 -30,-205 -133,-204z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport error from './svg/whiteKing';\r\n\r\nclass ErrorBoundary extends Component {\r\n  static propTypes = { children: PropTypes.object };\r\n  state = { hasError: false };\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({ hasError: true });\r\n\r\n    console.error(error.message);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={container}>\r\n          <div style={whiteKingStyle}>{error.whiteKing}</div>\r\n          <h1>Something went wrong</h1>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\nconst container = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column'\r\n};\r\n\r\nconst whiteKingStyle = {\r\n  width: 250,\r\n  height: 250,\r\n  transform: `rotate(90deg)`\r\n};\r\n","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport PropTypes from 'prop-types';\r\nimport isEqual from 'lodash.isequal';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport MultiBackend from 'react-dnd-multi-backend';\r\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch';\r\n\r\nimport SparePieces from './SparePieces';\r\nimport {\r\n  fenToObj,\r\n  validFen,\r\n  validPositionObject,\r\n  constructPositionAttributes\r\n} from './helpers';\r\nimport CustomDragLayer from './CustomDragLayer';\r\nimport defaultPieces from './svg/chesspieces/standard';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\nconst ChessboardContext = React.createContext();\r\n\r\nconst getPositionObject = position => {\r\n  if (position === 'start')\r\n    return fenToObj('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR');\r\n  if (validFen(position)) return fenToObj(position);\r\n  if (validPositionObject(position)) return position;\r\n\r\n  return {};\r\n};\r\n\r\nclass Chessboard extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * The id prop is necessary if more than one board is mounted.\r\n     * Drag and drop will not work as expected if not provided.\r\n     */\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    /**\r\n     * The position to display on the board.  Can be either a FEN string or a position object.\r\n     * See https://www.chessboardjsx.com/basics/fen and https://www.chessboardjsx.com/basics/position-object\r\n     * for examples.\r\n     */\r\n    position: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    /**\r\n     * An object with functions returning jsx as values(render prop).\r\n     * See https://www.chessboardjsx.com/custom\r\n     * Signature: { wK:\r\n     * function({ isDragging, squareWidth, droppedPiece, targetSquare, sourceSquare }) => jsx }\r\n     */\r\n    pieces: PropTypes.object,\r\n    /**\r\n     * The width in pixels.  For a responsive width, use calcWidth.\r\n     */\r\n    width: PropTypes.number,\r\n    /**\r\n     * Orientation of the board.\r\n     */\r\n    orientation: PropTypes.oneOf(['white', 'black']),\r\n    /**\r\n     * If false, notation will not be shown on the board.\r\n     */\r\n    showNotation: PropTypes.bool,\r\n    /**\r\n     * If true, spare pieces will appear above and below the board.\r\n     */\r\n    sparePieces: PropTypes.bool,\r\n    /**\r\n     * If false, the pieces will not be draggable\r\n     */\r\n    draggable: PropTypes.bool,\r\n    /**\r\n     * The behavior of the piece when dropped off the board. 'snapback' brings the piece\r\n     * back to it's original square and 'trash' deletes the piece from the board\r\n     */\r\n    dropOffBoard: PropTypes.oneOf(['snapback', 'trash']),\r\n    /**\r\n     * The time it takes for a piece to slide to the target square.  Only used\r\n     * when the next position comes from the position prop. See chessboardjsx.com/integrations/random for an example\r\n     */\r\n    transitionDuration: PropTypes.number,\r\n    /**\r\n     * The style object for the board.\r\n     */\r\n    boardStyle: PropTypes.object,\r\n    /**\r\n     * The style object for the light square.\r\n     */\r\n    lightSquareStyle: PropTypes.object,\r\n    /**\r\n     * The style object for the dark square.\r\n     */\r\n    darkSquareStyle: PropTypes.object,\r\n    /**\r\n     * An object containing custom styles for squares.  For example {'e4': {backgroundColor: 'orange'},\r\n     * 'd4': {backgroundColor: 'blue'}}.  See chessboardjsx.com/integrations/move-validation for an example\r\n     */\r\n    squareStyles: PropTypes.object,\r\n    /**\r\n     * The style object for the current drop square. { backgroundColor: 'sienna' }\r\n     */\r\n    dropSquareStyle: PropTypes.object,\r\n    /**\r\n     * A function for responsive size control, returns the width of the board.\r\n     *\r\n     * Signature: function({ screenWidth: number, screenHeight: number }) => number\r\n     */\r\n    calcWidth: PropTypes.func,\r\n    /**\r\n     * A function that gives access to the underlying square element.  It\r\n     * allows for customizations with rough.js. See chessboardjsx.com/custom for an\r\n     * example.\r\n     *\r\n     * Signature: function({ squareElement: node, squareWidth: number }) => void\r\n     */\r\n    roughSquare: PropTypes.func,\r\n    /**\r\n     *  A function to call when the mouse is over a square.\r\n     *  See chessboardjsx.com/integrations/move-validation for an example.\r\n     *\r\n     *  Signature: function(square: string) => void\r\n     */\r\n    onMouseOverSquare: PropTypes.func,\r\n    /**\r\n     * A function to call when the mouse has left the square.\r\n     * See chessboardjsx.com/integrations/move-validation for an example.\r\n     *\r\n     * Signature: function(square: string) => void\r\n     */\r\n    onMouseOutSquare: PropTypes.func,\r\n    /**\r\n     * The logic to be performed on piece drop. See chessboardjsx.com/integrations for examples.\r\n     *\r\n     * Signature: function({ sourceSquare: string, targetSquare: string, piece: string }) => void\r\n     */\r\n    onDrop: PropTypes.func,\r\n    /**\r\n     * A function that gives access to the current position object.\r\n     * For example, getPosition = position => this.setState({ myPosition: position }).\r\n     *\r\n     * Signature: function(currentPosition: object) => void\r\n     */\r\n    getPosition: PropTypes.func,\r\n    /**\r\n     * A function to call when a piece is dragged over a specific square.\r\n     *\r\n     * Signature: function(square: string) => void\r\n     */\r\n    onDragOverSquare: PropTypes.func,\r\n    /**\r\n     * A function to call when a square is clicked.\r\n     *\r\n     * Signature: function(square: string) => void\r\n     */\r\n    onSquareClick: PropTypes.func,\r\n    /**\r\n     * A function to call when a piece is clicked.\r\n     *\r\n     * Signature: function(piece: string) => void\r\n     */\r\n    onPieceClick: PropTypes.func,\r\n    /**\r\n     * A function to call when a square is right clicked.\r\n     *\r\n     * Signature: function(square: string) => void\r\n     */\r\n    onSquareRightClick: PropTypes.func,\r\n    /**\r\n     * A function to call when a piece drag is initiated.  Returns true if the piece is draggable,\r\n     * false if not.\r\n     *\r\n     * Signature: function( { piece: string, sourceSquare: string } ) => bool\r\n     */\r\n    allowDrag: PropTypes.func,\r\n    /**\r\n    When set to true it undos previous move\r\n     */\r\n    undo: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    id: '0',\r\n    position: '',\r\n    pieces: {},\r\n    width: 560,\r\n    orientation: 'white',\r\n    showNotation: true,\r\n    sparePieces: false,\r\n    draggable: true,\r\n    undo: false,\r\n    dropOffBoard: 'snapback',\r\n    transitionDuration: 300,\r\n    boardStyle: {},\r\n    lightSquareStyle: { backgroundColor: 'rgb(240, 217, 181)' },\r\n    darkSquareStyle: { backgroundColor: 'rgb(181, 136, 99)' },\r\n    squareStyles: {},\r\n    dropSquareStyle: { boxShadow: 'inset 0 0 1px 4px yellow' },\r\n    calcWidth: () => {},\r\n    roughSquare: () => {},\r\n    onMouseOverSquare: () => {},\r\n    onMouseOutSquare: () => {},\r\n    onDrop: () => {},\r\n    getPosition: () => {},\r\n    onDragOverSquare: () => {},\r\n    onSquareClick: () => {},\r\n    onPieceClick: () => {},\r\n    onSquareRightClick: () => {},\r\n    allowDrag: () => true\r\n  };\r\n\r\n  static Consumer = ChessboardContext.Consumer;\r\n\r\n  state = {\r\n    previousPositionFromProps: getPositionObject(this.props.position),\r\n    currentPosition: getPositionObject(this.props.position),\r\n    sourceSquare: '',\r\n    targetSquare: '',\r\n    sourcePiece: '',\r\n    waitForTransition: false,\r\n    phantomPiece: null,\r\n    wasPieceTouched: false,\r\n    manualDrop: false,\r\n    squareClicked: false,\r\n    firstMove: false,\r\n    pieces: { ...defaultPieces, ...this.props.pieces },\r\n    undoMove: this.props.undo\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions = () => {\r\n    this.setState({\r\n      screenWidth: window.innerWidth,\r\n      screenHeight: window.innerHeight\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { position, transitionDuration, getPosition } = this.props;\r\n    const { waitForTransition, undoMove } = this.state;\r\n    const positionFromProps = getPositionObject(position);\r\n    const previousPositionFromProps = getPositionObject(prevProps.position);\r\n\r\n    // Check if there is a new position coming from props or undo is called\r\n    if (!isEqual(positionFromProps, previousPositionFromProps) || undoMove) {\r\n      this.setState({\r\n        previousPositionFromProps: previousPositionFromProps,\r\n        undoMove: false\r\n      });\r\n\r\n      // get board position for user\r\n      getPosition(positionFromProps);\r\n\r\n      // Give piece time to transition.\r\n      if (waitForTransition) {\r\n        return new Promise(resolve => {\r\n          this.setState({ currentPosition: positionFromProps }, () =>\r\n            setTimeout(() => {\r\n              this.setState({ waitForTransition: false });\r\n              resolve();\r\n            }, transitionDuration)\r\n          );\r\n        }).then(() =>\r\n          setTimeout(\r\n            () => this.setState({ phantomPiece: null }),\r\n            transitionDuration\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { position, undo } = props;\r\n    const {\r\n      currentPosition,\r\n      previousPositionFromProps,\r\n      manualDrop,\r\n      squareClicked\r\n    } = state;\r\n    let positionFromProps = getPositionObject(position);\r\n\r\n    // If positionFromProps is a new position then execute, else return null\r\n    if (\r\n      !isEqual(positionFromProps, previousPositionFromProps) &&\r\n      !isEqual(positionFromProps, currentPosition)\r\n    ) {\r\n      // Position attributes from the diff between currentPosition and positionFromProps\r\n      const {\r\n        sourceSquare,\r\n        targetSquare,\r\n        sourcePiece,\r\n        squaresAffected\r\n      } = constructPositionAttributes(currentPosition, positionFromProps);\r\n\r\n      if (manualDrop) {\r\n        return {\r\n          sourceSquare,\r\n          targetSquare,\r\n          sourcePiece,\r\n          currentPosition: positionFromProps,\r\n          waitForTransition: false,\r\n          manualDrop: false\r\n        };\r\n      }\r\n\r\n      /* If the new position involves many pieces, then disregard the transition effect.\r\n        Possible to add functionality for transitioning of multiple pieces later */\r\n      if (squaresAffected && squaresAffected !== 2) {\r\n        return {\r\n          currentPosition: positionFromProps,\r\n          waitForTransition: false,\r\n          manualDrop: false,\r\n          sourceSquare,\r\n          targetSquare,\r\n          sourcePiece\r\n        };\r\n      }\r\n\r\n      // Check if currentPosition has a piece occupying the target square\r\n      if (currentPosition[targetSquare]) {\r\n        // Temporarily delete the target square from the new position\r\n        delete positionFromProps[targetSquare];\r\n\r\n        return {\r\n          sourceSquare,\r\n          targetSquare,\r\n          sourcePiece,\r\n          // Set the current position to the new position minus the targetSquare\r\n          currentPosition: positionFromProps,\r\n          waitForTransition: squareClicked ? false : true,\r\n          phantomPiece: squareClicked\r\n            ? null\r\n            : { [targetSquare]: currentPosition[targetSquare] },\r\n          manualDrop: false,\r\n          squareClicked: false\r\n        };\r\n      }\r\n\r\n      // allows for taking back a move\r\n      if (undo) {\r\n        return {\r\n          sourceSquare,\r\n          targetSquare,\r\n          sourcePiece,\r\n          currentPosition: positionFromProps,\r\n          waitForTransition: true,\r\n          manualDrop: false,\r\n          squareClicked: false,\r\n          undoMove: true\r\n        };\r\n      }\r\n\r\n      return {\r\n        sourceSquare,\r\n        targetSquare,\r\n        sourcePiece,\r\n        currentPosition: positionFromProps,\r\n        waitForTransition: squareClicked ? false : true,\r\n        manualDrop: false,\r\n        squareClicked: false\r\n      };\r\n    }\r\n\r\n    // default case\r\n    return null;\r\n  }\r\n\r\n  wasManuallyDropped = bool => this.setState({ manualDrop: bool });\r\n  wasSquareClicked = bool => this.setState({ squareClicked: bool });\r\n\r\n  /* Called on drop if there is no onDrop prop.  This is what executes when a position does not\r\n   change through the position prop, i.e., simple drag and drop operations on the pieces.*/\r\n  setPosition = ({ sourceSquare, targetSquare, piece }) => {\r\n    const { currentPosition } = this.state;\r\n    const { getPosition, dropOffBoard } = this.props;\r\n\r\n    if (sourceSquare === targetSquare) return;\r\n\r\n    if (dropOffBoard === 'trash' && !targetSquare) {\r\n      let newPosition = currentPosition;\r\n      delete newPosition[sourceSquare];\r\n      this.setState({ currentPosition: newPosition, manualDrop: true });\r\n      // get board position for user\r\n      return getPosition(currentPosition);\r\n    }\r\n\r\n    let newPosition = currentPosition;\r\n    sourceSquare !== 'spare' && delete newPosition[sourceSquare];\r\n    newPosition[targetSquare] = piece;\r\n\r\n    this.setState({ currentPosition: newPosition, manualDrop: true });\r\n    // get board position for user\r\n    getPosition(currentPosition);\r\n  };\r\n\r\n  // Allows for touch drag and drop\r\n  setTouchState = e => this.setState({ wasPieceTouched: e.isTrusted });\r\n\r\n  getWidth = () => {\r\n    const { calcWidth, width } = this.props;\r\n    const { screenWidth, screenHeight } = this.state;\r\n    return calcWidth({ screenWidth, screenHeight })\r\n      ? calcWidth({ screenWidth, screenHeight })\r\n      : width;\r\n  };\r\n\r\n  render() {\r\n    const { sparePieces, id, orientation, dropOffBoard } = this.props;\r\n    const {\r\n      sourceSquare,\r\n      targetSquare,\r\n      sourcePiece,\r\n      waitForTransition,\r\n      phantomPiece,\r\n      wasPieceTouched,\r\n      currentPosition,\r\n      manualDrop,\r\n      screenWidth,\r\n      screenHeight,\r\n      pieces\r\n    } = this.state;\r\n\r\n    const getScreenDimensions = screenWidth && screenHeight;\r\n\r\n    return (\r\n      <ErrorBoundary>\r\n        <ChessboardContext.Provider\r\n          value={{\r\n            ...this.props,\r\n            pieces,\r\n            orientation: orientation.toLowerCase(),\r\n            dropOffBoard: dropOffBoard.toLowerCase(),\r\n            ...{\r\n              width: this.getWidth(),\r\n              sourceSquare,\r\n              targetSquare,\r\n              sourcePiece,\r\n              waitForTransition,\r\n              phantomPiece,\r\n              setPosition: this.setPosition,\r\n              manualDrop,\r\n              setTouchState: this.setTouchState,\r\n              currentPosition,\r\n              screenWidth,\r\n              screenHeight,\r\n              wasManuallyDropped: this.wasManuallyDropped,\r\n              wasSquareClicked: this.wasSquareClicked\r\n            }\r\n          }}\r\n        >\r\n          <div>\r\n            {getScreenDimensions && <Board />}\r\n            {getScreenDimensions && sparePieces && <SparePieces.Bottom />}\r\n          </div>\r\n          <CustomDragLayer\r\n            width={this.getWidth()}\r\n            pieces={pieces}\r\n            id={id}\r\n            wasPieceTouched={wasPieceTouched}\r\n            sourceSquare={targetSquare}\r\n          />\r\n        </ChessboardContext.Provider>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropContext(MultiBackend(HTML5toTouch))(Chessboard);\r\n","import React from 'react';\nimport './EightQueens.css';\nimport Chessboard from \"./chessboardjsx-mod/index.js\";\n\nfunction EightQueens() {\n  return (\n    <div className=\"EightQueens\">\n        <div className=\"EightQueens-header\">\n            <a\n                href=\"https://github.com/attogram/EightQueens\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                Eight Queens\n                v0.0.1-alpha\n            </a>\n        </div>\n        <Chessboard\n            id=\"EightQueens\"\n            sparePieces={true}\n            dropOffBoard=\"trash\"\n        />\n    </div>\n  );\n}\n\nexport default EightQueens;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport EightQueens from './EightQueens';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<EightQueens />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}